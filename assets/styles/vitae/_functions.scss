@mixin font-size-scale($font-size: 1rem, $scale: 1.0) {
  @if ($font-size != 0) {
    --font-size-base: #{$scale} * #{$font-size};
  }
  --font-size-normal:    #{$font-size-factor-normal}    * #{$scale} * var(--font-size-base);
  --font-size-smaller-4: #{$font-size-factor-smaller-4} * #{$scale} * var(--font-size-base);
  --font-size-smaller-3: #{$font-size-factor-smaller-3} * #{$scale} * var(--font-size-base);
  --font-size-smaller-2: #{$font-size-factor-smaller-2} * #{$scale} * var(--font-size-base);
  --font-size-smaller-1: #{$font-size-factor-smaller-1} * #{$scale} * var(--font-size-base);
  --font-size-larger-1:  #{$font-size-factor-larger-1}  * #{$scale} * var(--font-size-base);
  --font-size-larger-2:  #{$font-size-factor-larger-2}  * #{$scale} * var(--font-size-base);
  --font-size-larger-3:  #{$font-size-factor-larger-3}  * #{$scale} * var(--font-size-base);
  --font-size-larger-4:  #{$font-size-factor-larger-4}  * #{$scale} * var(--font-size-base);
  --font-size-larger-5:  #{$font-size-factor-larger-5}  * #{$scale} * var(--font-size-base);
  font-size: calc(var(--font-size-normal));
}


@mixin wrap() {
  padding: 0 $screenViewBodyPaddingNarrow;
  padding: env(safe-area-inset-top) calc(#{$screenViewBodyPaddingNarrow} + env(safe-area-inset-right)) env(safe-area-inset-bottom) calc(#{$screenViewBodyPaddingNarrow} + env(safe-area-inset-left));
  @media screen and (min-width: $screenViewBreakpointWidthNarrow) {
    padding: 0 $screenViewBodyPadding;
    padding: env(safe-area-inset-top) calc(#{$screenViewBodyPadding} + env(safe-area-inset-right)) env(safe-area-inset-bottom) calc(#{$screenViewBodyPadding} + env(safe-area-inset-left));
  }
}

// Inline list with separators
// https://www.jankollars.com/posts/multi-line-horizontal-list-with-separators/
@mixin inline-separator-list($list-item-separation: 2ch, $list-separator: '•') {
  $list-sep-width: $list-item-separation / 3.0 + 0.5ch;
  ul {
    display: flex;
    flex-wrap: wrap;
    padding-left: 0;
    list-style: none;
    // margin-left: calc(-3ch);
    margin-left: -$list-item-separation + 0.5ch;
    // clip-path: inset(0 0 0 3ch);
    clip-path: inset(0 0 0 $list-item-separation - 0.5ch);
    & > * {
      padding-left: $list-item-separation;
    }
    li {
      // padding-left: 1ch;
      padding-left: $list-item-separation;
      margin-left: -$list-item-separation / 3.0 - $list-sep-width;
    }
    li::before {
      content: '•';
      display: inline-block;
      // margin-right: 0.5ch;
      // margin-right: 0.5ch;
      margin-right: $list-item-separation / 3.0 - 0.5ch;
      // width: 1ch;
      width: $list-sep-width;
      text-align: center;
    }
  }
}

@mixin list-style($padding-vertical: $screenViewBodyPaddingNarrow / 2, $indent: $list-style-indent) {
  ul, ol {
    list-style: disc outside none; // initial;
    padding: $padding-vertical 0;
    margin: 0 0 0 $indent;
    li {
      padding: ($padding-vertical / 2) 0 ($padding-vertical / 2) 0.25em;
    }
  }
  ul li {
    list-style: disc outside;
    li {
      list-style-type: none;
      &::before {
        content: '–';
        float: left;
        margin-left: -1em;
      }
      li {
        list-style-type: circle;
        &::before {
          content: none;
        }
      }
    }
  }
  ol {
    list-style: decimal;
  }
}


@mixin drop-shadow($dist: 3rem, $opacity: 0.2, $hover-opacity: 0.4) {
  box-shadow: 0 0 $dist rgba(0, 0, 0, $opacity);
  &:hover {
    box-shadow: 0 0 $dist rgba(0, 0, 0, $hover-opacity);
  }
}

@mixin lower-caps($spacing: 0.05ch) {
  font-weight: var(--font-weight-caps);
  font-variant: all-small-caps;
  letter-spacing: $spacing;
  text-transform: lowercase;
}

@mixin upper-caps($spacing: 0.05ch) {
  font-weight: var(--font-weight-caps);
  font-variant: small-caps;
  letter-spacing: $spacing;
  text-transform: uppercase;
}

@mixin upper-caps-strong($spacing: 0.05ch) {
  font-weight: var(--font-weight-caps-strong);
  font-variant: small-caps;
  letter-spacing: $spacing;
  text-transform: uppercase;
}
